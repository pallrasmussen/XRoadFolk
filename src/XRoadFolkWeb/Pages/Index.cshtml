@page
@model XRoadFolkWeb.Pages.IndexModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer L
@{
    ViewData["Title"] = L["Title"];
}

<h1 class="mb-4">@L["Title"]</h1>

<div class="row g-4 align-items-start">
    <!-- People Search (kept as-is) -->
    <div class="col-12 col-lg-5 col-xxl-4">
        <div class="card shadow-sm h-100">
            <div class="card-body">
                <h5 class="card-title">@L["SearchCriteria"]</h5>
                <p class="text-muted mb-3">@L["ProvideCriteria"]</p>

                <form method="post" class="row gy-3">
                    <div asp-validation-summary="ModelOnly" class="text-danger small"></div>

                    <div class="col-12">
                        <label asp-for="Ssn" class="form-label"></label>
                        <input asp-for="Ssn" class="form-control"
                               data-val-ssnornamedob="@XRoadFolkWeb.Resources.ValidationMessages.ProvideSsnOrNameDob"
                               data-val-ssnornamedob-ssn="Ssn"
                               data-val-ssnornamedob-first="FirstName"
                               data-val-ssnornamedob-last="LastName"
                               data-val-ssnornamedob-dob="DateOfBirth" />
                        <span asp-validation-for="Ssn" class="text-danger small"></span>
                    </div>

                    <div class="col-12">
                        <div class="text-center text-muted-sep">@L["OrSeparator"]</div>
                    </div>

                    <div class="col-md-6">
                        <label asp-for="FirstName" class="form-label"></label>
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger small"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="LastName" class="form-label"></label>
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger small"></span>
                    </div>
                    <div class="col-12">
                        <label asp-for="DateOfBirth" class="form-label"></label>
                        <input asp-for="DateOfBirth" class="form-control" placeholder="@L["DateFormatPlaceholder"]" />
                        <span asp-validation-for="DateOfBirth" class="text-danger small"></span>
                    </div>

                    <div class="col-12 d-grid d-sm-flex gap-2 mt-2">
                        <button type="submit" class="btn btn-primary">@L["Search"]</button>
                        <button type="submit" asp-page-handler="Clear" class="btn btn-outline-secondary">@L["Clear"]</button>
                    </div>
                </form>

                @if (Model.Errors?.Count > 0)
                {
                    <div class="alert alert-danger mt-3" role="alert">
                        <strong>@L["InputErrors"]</strong>
                        <ul class="mb-0">
                            @foreach (var e in Model.Errors)
                            {
                                <li>@e</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- GetPeoplePublicInfo viewer -->
    <div class="col-12 col-lg-7 col-xxl-8 min-w-0">
        <partial name="_GetPeoplePublicInfoViewer"
                 view-data='new ViewDataDictionary(ViewData) {
                     ["RawXml"] = Model?.PeoplePublicInfoResponseXml ?? string.Empty,
                     ["PrettyXml"] = Model?.PeoplePublicInfoResponseXmlPretty ?? string.Empty
                 }' />

        <!-- GetPerson response (AJAX-filled; kept separate and below the viewer) -->
        <div id="person-details-section" class="card shadow-sm mb-4 person-details d-none">
            <div class="card-body">
                <div class="pd-toolbar d-flex flex-wrap gap-2 justify-content-between align-items-center mb-2 border-bottom pb-2">
                    <h5 class="card-title mb-0">
                        @L["PersonDetails"]
                        @if (!string.IsNullOrWhiteSpace(Model?.SelectedNameSuffix))
                        {
                            <small class="text-muted ms-2">@Model.SelectedNameSuffix</small>
                        }
                    </h5>

                    <div class="d-flex gap-2">
                        <button type="button" id="pd-expand-all" class="btn btn-sm btn-outline-secondary">@L["Expand"]</button>
                        <button type="button" id="pd-collapse-all" class="btn btn-sm btn-outline-secondary">@L["Collapse"]</button>
                    </div>
                </div>

                <div id="person-details-loading" class="text-muted small d-none">@L["Loading"]…</div>
                <div id="person-details-error" class="alert alert-danger d-none"></div>

                <div id="person-details-body"><!-- accordion injected here --></div>
            </div>
        </div>

        <style>
        /* Scoped GetPerson styling (matches viewer look) */
        .person-details .pd-toolbar {
          position: sticky; top: -1px; z-index: 2; background: var(--bs-body-bg);
        }
        .person-details .accordion-button {
          padding: .5rem .75rem; font-weight: 600;
        }
        .person-details .accordion-item + .accordion-item {
          border-top: 1px solid var(--bs-border-color);
        }
        .person-details .accordion-body { padding: 0; }

        /* Table readability tweaks */
        .person-details .table { margin-bottom: 0; }
        .person-details .table th {
          width: 35%;
          background: var(--bs-tertiary-bg, var(--bs-secondary-bg-subtle));
          color: var(--bs-secondary-color);
        }
        .person-details .table th,
        .person-details .table td {
          vertical-align: top;
          word-break: break-word;
        }

        /* Subtle row hover */
        .person-details .table tbody tr:hover th,
        .person-details .table tbody tr:hover td {
          background: var(--bs-secondary-bg-subtle);
        }

        /* Optional: a quick flash when new content loads */
        @@keyframes pdFlash { 0% { background: rgba(255,243,205,.9); } 100% { background: transparent; } }
        .person-details .pd-flash { animation: pdFlash 1.2s ease-out 1; }
        </style>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/validation-ssn.js"></script>
    <script src="~/js/validation-name.js"></script>
    <script src="~/js/validation-dob.js"></script>
    <script src="~/js/validation-ssn-or-name-dob.js"></script>
    <script src="~/js/validation-letters-only.js"></script>
    <script>
  // Expand/Collapse all panels inside GetPerson
  document.addEventListener('click', function (e) {
    if (e.target && e.target.id === 'pd-expand-all') {
      var panes = document.querySelectorAll('#person-details-section .accordion-collapse');
      panes.forEach(function (p) { p.classList.add('show'); });
      var btns = document.querySelectorAll('#person-details-section .accordion-button');
      btns.forEach(function (b) { b.classList.remove('collapsed'); });
    }
    if (e.target && e.target.id === 'pd-collapse-all') {
      var panes = document.querySelectorAll('#person-details-section .accordion-collapse');
      panes.forEach(function (p) { p.classList.remove('show'); });
      var btns = document.querySelectorAll('#person-details-section .accordion-button');
      btns.forEach(function (b) { b.classList.add('collapsed'); });
    }
  });

  // Optional: flash when new content is injected
  (function(){
    var body = document.getElementById('person-details-body');
    if (!body) return;
    var mo = new MutationObserver(function() {
      var host = document.getElementById('person-details-section');
      if (host) { host.classList.add('pd-flash'); setTimeout(function(){ host.classList.remove('pd-flash'); }, 900); }
    });
    mo.observe(body, { childList: true });
  })();
</script>
}
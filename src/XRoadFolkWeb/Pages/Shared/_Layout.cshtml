@using System.Globalization
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using XRoadFolkWeb.Shared
@inject IOptions<RequestLocalizationOptions> LocOpts
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SR
@inject Microsoft.Extensions.Configuration.IConfiguration Config
@{
    Layout = null;
    var currentUi = CultureInfo.CurrentUICulture.Name;
    var supported = LocOpts.Value.SupportedUICultures ?? new List<CultureInfo> { CultureInfo.GetCultureInfo("en-US") };

    // Optional: order cultures according to configuration to ensure predictable display order
    List<CultureInfo> culturesToShow;
    string[]? order = Config.GetSection("Localization:SupportedCultures").Get<string[]>();
    if (order?.Length > 0)
    {
        culturesToShow = order
            .Select(code => supported.FirstOrDefault(s => string.Equals(s.Name, code, StringComparison.OrdinalIgnoreCase)))
            .Where(ci => ci is not null)
            .Select(ci => ci!)
            .ToList();

        // Append any cultures not explicitly ordered
        culturesToShow.AddRange(supported.Where(s => !culturesToShow.Contains(s)));
    }
    else
    {
        culturesToShow = supported.ToList();
    }
}
<!DOCTYPE html>
<html lang="@currentUi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="color-scheme" content="light dark" />
    <title>@ViewData["Title"] - @SR["AppName"]</title>

    <script>
        // Set theme before paint to avoid flash
        (function () {
            const key = 'theme';
            const light = 'brand';
            const dark = 'brand-dark';
            const saved = localStorage.getItem(key);
            const preferDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            const theme = saved || (preferDark ? dark : light);
            document.documentElement.setAttribute('data-bs-theme', theme);
        })();
    </script>

    <!-- Bootswatch "Flatly" theme -->
    <link href="https://cdn.jsdelivr.net/npm/bootswatch@5.3.3/dist/flatly/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">

    <!-- Custom overrides -->
    <link href="~/css/site.css" rel="stylesheet" />
</head>
<body class="d-flex flex-column min-vh-100">
    <!-- Branded navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow-sm">
        <div class="container">
            <a class="navbar-brand fw-bold" asp-page="/Index">@SR["AppName"]</a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav"
                    aria-controls="mainNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div id="mainNav" class="collapse navbar-collapse">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0 align-items-lg-center gap-2">
                    <!-- Home button removed -->
                    <li class="nav-item">
                        <a class="nav-link @(Context.Request.Path.StartsWithSegments("/About") ? "active" : null)" asp-page="/About">@SR["Nav_About"]</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="btn btn-sm btn-outline-light dropdown-toggle @(Context.Request.Path.StartsWithSegments("/Logs") ? "active" : null)" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">@SR["Nav_Logs"]</a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" asp-page="/Logs/Http">HTTP</a></li>
                            <li><a class="dropdown-item" asp-page="/Logs/Soap">SOAP</a></li>
                            <li><a class="dropdown-item" asp-page="/Logs/App">App</a></li>
                        </ul>
                    </li>
                </ul>

                <div class="d-flex align-items-center gap-2">
                    <!-- Theme toggle -->
                    <button id="theme-toggle" type="button" class="btn btn-sm btn-outline-light" aria-pressed="false" title="@SR["ToggleTheme"]">
                        <span class="theme-icon" aria-hidden="true">🌙</span>
                        <span class="ms-1 d-none d-sm-inline">@SR["Theme"]</span>
                    </button>

                    <!-- Culture switcher -->
                    <form class="d-flex align-items-center" method="post" action="/set-culture" asp-antiforgery="true">
                        <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                        <select class="form-select form-select-sm me-2" name="culture" onchange="this.form.submit()">
                            @foreach (var c in culturesToShow)
                            {
                                var loc = SR[$"Culture_{c!.Name}"];
                                var label = loc.ResourceNotFound ? c!.NativeName : loc.Value;

                                if (string.Equals(c!.Name, currentUi, StringComparison.OrdinalIgnoreCase))
                                {
                                    <option value="@c!.Name" selected>@($"{label} ({c!.Name})")</option>
                                }
                                else
                                {
                                    <option value="@c!.Name">@($"{label} ({c!.Name})")</option>
                                }
                            }
                        </select>
                    </form>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <main role="main" class="flex-grow-1">
        <div class="container my-4">
            @RenderBody()
        </div>
    </main>

    <!-- Footer -->
    <footer class="mt-auto border-top py-3">
        <div class="container d-flex flex-column flex-sm-row align-items-center justify-content-between small text-muted">
            <span>&copy; @DateTime.UtcNow.Year @Config["Branding:AuthorName"]</span>
            <span>@SR["BuiltWith"]</span>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="~/js/site.js"></script>

    <environment include="Development">
        <script src="/_framework/aspnetcore-browser-refresh.js"></script>
    </environment>

    @RenderSection("Scripts", required: false)
</body>
</html>
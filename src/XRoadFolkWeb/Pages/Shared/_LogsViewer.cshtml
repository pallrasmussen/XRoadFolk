@using XRoadFolkWeb.Shared
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SR
@{
  var nonce = Context?.Items?["CSP_NONCE"] as string;
}
<section class="card shadow-sm" id="logs-section" aria-labelledby="logs-heading">
  <div class="card-body">
    <div class="d-flex justify-content-between align-items-center mb-2" role="toolbar" aria-label="@SR["LogsToolbar"]">
      <div class="d-flex align-items-center gap-2 flex-wrap">
        <a asp-page="/Index" class="btn btn-sm btn-outline-dark" id="logs-back" aria-label="@SR["Back"]"><i class="bi bi-arrow-left me-1" aria-hidden="true"></i>@SR["Back"]</a>
        <div class="btn-group btn-group-sm" role="group" aria-label="@SR["Kind"]">
          <button type="button" class="btn btn-outline-dark active" data-kind="http" aria-pressed="true">@SR["HTTP"]</button>
          <button type="button" class="btn btn-outline-dark" data-kind="soap" aria-pressed="false">@SR["SOAP"]</button>
          <button type="button" class="btn btn-outline-dark" data-kind="app" aria-pressed="false">@SR["App"]</button>
        </div>
        <h2 class="card-title mb-0 ms-2 h5" id="logs-heading">@SR["Logs"]</h2>
        <span class="badge text-bg-secondary ms-1" id="logs-count" aria-live="polite">0</span>
      </div>
      <div class="d-flex gap-2 flex-wrap">
        <button class="btn btn-sm btn-outline-dark" id="logs-clear" aria-label="@SR["ClearLogs"]">@SR["Clear"]</button>
        <button class="btn btn-sm btn-outline-dark" id="logs-pause" aria-label="@SR["PauseOrResumeLiveStream"]" data-i18n-pause="@SR["Pause"]" data-i18n-resume="@SR["Resume"]">@SR["Pause"]</button>
        <button class="btn btn-sm btn-outline-dark" id="logs-download" aria-label="@SR["DownloadVisibleAsJson"]">@SR["Download"]</button>
      </div>
    </div>

    <div class="row g-2 align-items-center mb-2">
      <div class="col-sm-8">
        <div class="logs-filter-group">
          <label for="logs-filter" class="form-label visually-hidden">@SR["Filter"]</label>
          <div class="input-group input-group-sm">
            <span class="input-group-text" id="logs-filter-label">@SR["Filter"]</span>
            <input type="text" class="form-control" id="logs-filter" aria-labelledby="logs-filter-label" placeholder="@SR["SearchInMessageOrCategory"]">
            <label for="logs-level" class="form-label visually-hidden">@SR["Level"]</label>
            <select class="form-select" id="logs-level" style="max-width:12rem;" aria-label="@SR["Level"]">
              <option value="">@SR["AnyLevel"]</option>
              <option>@SR["Trace"]</option>
              <option>@SR["Debug"]</option>
              <option>@SR["Information"]</option>
              <option>@SR["Warning"]</option>
              <option>@SR["Error"]</option>
              <option>@SR["Critical"]</option>
            </select>
          </div>
        </div>
      </div>
      <div class="col-sm-4 text-sm-end small text-muted" id="logs-status" aria-live="polite"></div>
    </div>

    <div class="table-responsive logs-table-container" style="max-height: 65vh;" role="region" aria-label="@SR["LogsTableRegion"]">
      <table class="table table-sm table-striped align-middle" id="logs-table">
        <thead class="table-light position-sticky thead-sticky" style="top:0; z-index:1;">
          <tr>
            <th class="th-width-ts" scope="col">@SR["TimestampLocal"]</th>
            <th class="th-width-lvl" scope="col">@SR["Level"]</th>
            <th scope="col">@SR["Category"]</th>
            <th scope="col">@SR["Message"]</th>
            <th class="text-end" style="width:6rem;" scope="col">@SR["Actions"]</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>
</section>

<script nonce="@nonce">
(function(){
  function init(){
    var root = document.getElementById('logs-view');
    var kind = (root && root.getAttribute('data-default-kind')) || 'http';

    var paused = false;
    var filterTxt = '';
    var filterLevel = '';
    var es = null;

    var tbody = document.querySelector('#logs-table tbody');
    var tableContainer = document.querySelector('.logs-table-container');
    var filter = document.getElementById('logs-filter');
    var level = document.getElementById('logs-level');
    var clearBtn = document.getElementById('logs-clear');
    var pauseBtn = document.getElementById('logs-pause');
    var downloadBtn = document.getElementById('logs-download');
    var backBtn = document.getElementById('logs-back');
    var statusEl = document.getElementById('logs-status');
    var countEl = document.getElementById('logs-count');

    var pauseTextPause = (pauseBtn && pauseBtn.getAttribute('data-i18n-pause')) || 'Pause';
    var pauseTextResume = (pauseBtn && pauseBtn.getAttribute('data-i18n-resume')) || 'Resume';

    // kind buttons
    var kindButtons = document.querySelectorAll('[data-kind]');
    kindButtons.forEach(function(btn){
      btn.addEventListener('click', function(){
        kindButtons.forEach(function(b){ b.classList.remove('active'); b.setAttribute('aria-pressed','false'); });
        btn.classList.add('active');
        btn.setAttribute('aria-pressed','true');
        kind = btn.getAttribute('data-kind') || 'http';
        reloadHistory();
        connect();
      });
      btn.addEventListener('keydown', function(e){
        if (e.key === 'ArrowRight' || e.key === 'ArrowLeft'){
          e.preventDefault();
          var arr = Array.prototype.slice.call(kindButtons);
          var idx = arr.indexOf(btn);
          var next = e.key === 'ArrowRight' ? (idx+1)%arr.length : (idx-1+arr.length)%arr.length;
          arr[next].focus();
        }
      });
    });

    // Limits and batching
    var MAX_ROWS = 3000;        // hard cap
    var TRIM_TO_ROWS = 2000;    // trim down to after exceeding cap
    var BATCH_FLUSH_MS = 50;    // flush interval for batching
    var pending = [];
    var flushTimer = 0;

    var visible = []; // keep the visible entries (after filter) for export

    function rowFor(entry){
      var tr = document.createElement('tr');
      tr.innerHTML = '<td>'+fmtLocal(entry.timestamp)+'</td>'+
                     '<td>'+lvlBadge(entry.level)+'</td>'+
                     '<td>'+escapeHtml(entry.category||'')+'</td>'+
                     '<td>'+escapeHtml(entry.message||'')+'</td>'+
                     '<td class="text-end">'+
                        '<button class="btn btn-sm btn-outline-dark" data-action="copy" aria-label="Copy">'+@Html.Raw("'" + SR["Copy"].Value.Replace("'","\\'") + "'")+'</button>'+
                     '</td>';
      tr.__entry = entry;
      return tr;
    }
    function escapeHtml(s){
      return String(s||'').replace(/[&<>]/g, function(ch){ return ({'&':'&amp;','<':'&lt;','>':'&gt;'}[ch]); });
    }
    function lvlBadge(l){ var t=String(l||''); return '<span class="badge lvl-badge badge-'+escapeHtml(t)+'">'+escapeHtml(t)+'</span>'; }
    function pad(n,l){ n=String(n); l=l||2; return n.length>=l?n:('0'.repeat(l-n.length)+n); }
    function fmtLocal(ts){ try{ var d=new Date(ts); if(isNaN(d)) return ts; var yyyy=d.getFullYear(), mm=pad(d.getMonth()+1), dd=pad(d.getDate()), HH=pad(d.getHours()), MM=pad(d.getMinutes()), SS=pad(d.getSeconds()), mmm=pad(d.getMilliseconds(),3); var off=-d.getTimezoneOffset(); var sign=off>=0?'+':'-'; var abs=Math.abs(off); var oh=pad(Math.floor(abs/60)); var om=pad(abs%60); return yyyy+'-'+mm+'-'+dd+' '+HH+':'+MM+':'+SS+'.'+mmm+' '+sign+oh+':'+om; }catch{return ts;} }

    function match(entry){
      if (filterLevel && String(entry.level).toLowerCase() !== filterLevel) return false;
      if (filterTxt){
        var t = (entry.message||'')+' '+(entry.category||'');
        if (t.toLowerCase().indexOf(filterTxt) < 0) return false;
      }
      return true;
    }

    function scheduleFlush(){ if (flushTimer) return; flushTimer = setTimeout(flush, BATCH_FLUSH_MS); }

    function flush(){
      flushTimer = 0;
      if (!pending.length) return;

      var autoscroll = false;
      try {
        if (tableContainer){
          var nearBottom = (tableContainer.scrollTop + tableContainer.clientHeight) >= (tableContainer.scrollHeight - 8);
          autoscroll = nearBottom;
        }
      } catch {}

      var frag = document.createDocumentFragment();
      for (var i=0;i<pending.length;i++) frag.appendChild(pending[i]);
      pending = [];
      tbody.appendChild(frag);

      trimIfNeeded();

      if (autoscroll && tableContainer){ try { tableContainer.scrollTop = tableContainer.scrollHeight; } catch {} }

      // update visible snapshot & counters
      visible = Array.prototype.map.call(tbody.children, function(tr){ return tr.__entry; }).filter(Boolean);
      if (countEl) countEl.textContent = String(visible.length || 0);
      if (statusEl) statusEl.textContent = (visible.length || 0) + ' ' + @Html.Raw("'" + SR["Entries"].Value.Replace("'","\\'") + "'");
    }

    function trimIfNeeded(){
      try{
        var extra = tbody.children.length - MAX_ROWS;
        if (extra > 0){
          var toRemove = Math.max(extra, tbody.children.length - TRIM_TO_ROWS);
          for (var i=0;i<toRemove;i++){ if (!tbody.firstChild) break; tbody.removeChild(tbody.firstChild); }
        }
      } catch(e){ console.debug('LogsViewer: trim failed', e); }
    }

    function append(entry){ if (!match(entry)) return; var tr = rowFor(entry); pending.push(tr); scheduleFlush(); }

    function connect(){
      if (es) try { es.close(); } catch(e){}
      es = new EventSource('/logs/stream?kind=' + encodeURIComponent(kind));
      es.onmessage = function(ev){ if (paused) return; try { var entry = JSON.parse(ev.data); append(entry); } catch(e){ console.warn('LogsViewer: JSON parse failed', e); } };
      es.onerror = function(){ try { es.close(); } catch(e){} setTimeout(connect, 1000); };
    }

    function reloadHistory(){
      tbody.innerHTML = '';
      visible = [];
      if (countEl) countEl.textContent = '0';
      if (statusEl) statusEl.textContent = '';
      fetch('/logs?kind=' + encodeURIComponent(kind)).then(r=>r.json()).then(function(d){
        if (!d || d.ok !== true) return;
        var items = d.items||[];
        // Keep only the most recent up to MAX_ROWS
        if (items.length > MAX_ROWS) items = items.slice(items.length - MAX_ROWS);
        for (var i=0;i<items.length;i++) append(items[i]);
        flush();
      });
    }

    filter && filter.addEventListener('input', function(){ filterTxt = (filter.value||'').trim().toLowerCase(); reloadHistory(); });
    level && level.addEventListener('change', function(){ filterLevel = (level.value||'').trim().toLowerCase(); reloadHistory(); });
    clearBtn && clearBtn.addEventListener('click', function(){ fetch('/logs/clear', { method: 'POST' }); tbody.innerHTML=''; visible=[]; if (countEl) countEl.textContent='0'; if (statusEl) statusEl.textContent=''; });
    pauseBtn && pauseBtn.addEventListener('click', function(){ paused = !paused; pauseBtn.classList.toggle('active', paused); pauseBtn.textContent = paused ? pauseTextResume : pauseTextPause; pauseBtn.setAttribute('aria-pressed', paused ? 'true' : 'false'); });

    downloadBtn && downloadBtn.addEventListener('click', function(){
      try{
        var blob = new Blob([JSON.stringify(visible, null, 2)], { type: 'application/json;charset=utf-8' });
        var a = document.createElement('a'); a.href = URL.createObjectURL(blob); a.download = 'logs_'+kind+'_'+new Date().toISOString().replace(/[:.]/g,'-')+'.json'; document.body.appendChild(a); a.click(); URL.revokeObjectURL(a.href); a.remove();
      }catch(e){ console.warn('LogsViewer: download failed', e); }
    });

    // copy row message
    tbody.addEventListener('click', function(ev){
      var b = ev.target && ev.target.closest('[data-action="copy"]'); if(!b) return;
      var tr = b.closest('tr'); if (!tr || !tr.__entry) return;
      try { navigator.clipboard.writeText(tr.__entry.message || ''); b.textContent=@Html.Raw("'" + SR["Copied"].Value.Replace("'","\\'") + "'"); setTimeout(function(){ b.textContent=@Html.Raw("'" + SR["Copy"].Value.Replace("'","\\'") + "'"); }, 1200); } catch {}
    });

    backBtn && backBtn.addEventListener('click', function(e){
      try {
        var ref = document.referrer ? new URL(document.referrer) : null;
        if (ref && ref.origin === location.origin) {
          var p = (ref.pathname || '').toLowerCase();
          if (p === '/' || p.endsWith('/index')) { e.preventDefault(); history.back(); return; }
        }
      } catch {}
    });

    reloadHistory();
    connect();
  }

  if (document.readyState === 'loading') document.addEventListener('DOMContentLoaded', init); else init();
})();
</script>

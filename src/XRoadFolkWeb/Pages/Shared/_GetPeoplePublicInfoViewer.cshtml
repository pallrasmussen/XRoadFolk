@using System.Text.Json
@using XRoadFolkWeb.Shared
@inject Microsoft.Extensions.Localization.IStringLocalizer<SharedResource> SR
@inject XRoadFolkWeb.Infrastructure.ResponseViewerOptions RespOpts
@inject Microsoft.Extensions.Configuration.IConfiguration Config
@{
    var raw = (string?)(ViewData["RawXml"]) ?? "";
    var pretty = (string?)(ViewData["PrettyXml"]) ?? "";
    var initialPublicId = (string?)(ViewData["InitialPublicId"]) ?? string.Empty;
    bool showRaw = RespOpts?.ShowRawXml ?? true; // kept for potential future use
    bool showPretty = RespOpts?.ShowPrettyXml ?? true; // kept for potential future use

    var gpivI18n = new {
        Basics = SR["Basics"].Value,
        Names = SR["Names"].Value,
        Name = SR["Name"].Value,
        PublicId = SR["PublicId"].Value,
        DOB = SR["DOB"].Value,
        Status = SR["Status"].Value,
        Copy = SR["Copy"].Value,
        Copied = SR["Copied"].Value,
        PersonDetails = SR["PersonDetails"].Value,
        Loading = SR["Loading"].Value,
        NoBasics = SR["NoBasics"].Value,
        NoAddresses = SR["NoAddresses"].Value,
        NoForeignSsns = SR["NoForeignSsns"].Value,
        NoJuridicalParents = SR["NoJuridicalParents"].Value,
        NoData = SR["NoData"].Value,
        RawXml = SR["RawXml"].Value,
        PrettyXml = SR["PrettyXml"].Value,
        Download = SR["Download"].Value
    };
    var nonce = Context?.Items?["CSP_NONCE"] as string;

    var includeSection = Config.GetSection("Operations:GetPerson:Request:Include");
    var includeGroups = includeSection.GetChildren()
        .Where(c => bool.TryParse(c.Value, out var bv) && bv)
        .Select(c => c.Key)
        .Distinct(StringComparer.OrdinalIgnoreCase)
        .OrderBy(k => k)
        .ToArray();

    string rawB64 = string.IsNullOrEmpty(raw) ? string.Empty : Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(raw));
    string prettyB64 = string.IsNullOrEmpty(pretty) ? string.Empty : Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(pretty));
}
<div id="gpiv-initial-publicid" data-initial-publicid="@initialPublicId" hidden></div>
<link rel="stylesheet" href="~/css/gpiv.css" asp-append-version="true" />

<div id="person-details-wrapper" class="mb-4">
  <div id="person-details-section" class="card shadow-sm person-details" role="region" aria-labelledby="pd-title">
    <div class="card-body">
      <div class="pd-toolbar d-flex flex-wrap gap-2 justify-content-between align-items-center mb-2 border-bottom pb-2">
        <h5 id="pd-title" class="card-title mb-0">@SR["PersonDetails"]</h5>
        <div class="d-flex flex-wrap gap-2">
          <button type="button" id="pd-expand-all" class="btn btn-sm btn-outline-secondary"><i class="bi bi-chevron-double-down me-1" aria-hidden="true"></i>@SR["Expand"]</button>
          <button type="button" id="pd-collapse-all" class="btn btn-sm btn-outline-secondary"><i class="bi bi-chevron-double-up me-1" aria-hidden="true"></i>@SR["Collapse"]</button>
          <button type="button" id="pd-fullscreen" class="btn btn-sm btn-outline-secondary" title="@SR["ToggleFullscreen"]"><i class="bi bi-arrows-fullscreen me-1" aria-hidden="true"></i>@SR["Fullscreen"]</button>
        </div>
      </div>

      <ul class="nav nav-tabs small" id="pd-tabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="pd-tab-people-btn" data-bs-toggle="tab" data-bs-target="#pd-tab-people" type="button" role="tab" aria-controls="pd-tab-people" aria-selected="true">@SR["PeopleLabel"]</button>
        </li>
        <li class="nav-item ms-auto d-flex align-items-center">
          <button type="button" id="pd-toggle-details" class="btn btn-sm btn-outline-primary collapsed" data-bs-toggle="collapse" data-bs-target="#pd-details-panel" aria-expanded="false" aria-controls="pd-details-panel" title="@SR["PersonDetails"]" aria-label="@SR["PersonDetails"]">
            <i class="bi bi-card-text me-1" aria-hidden="true"></i><span class="pd-details-label">@SR["Details"]</span>
          </button>
        </li>
      </ul>

      <div class="tab-content border-start border-end border-bottom rounded-bottom p-2" id="pd-tabs-content" style="min-height:10rem;">
        <div class="tab-pane fade show active" id="pd-tab-people" role="tabpanel" aria-labelledby="pd-tab-people-btn" tabindex="0">
          <div class="gpiv-toolbar d-flex flex-wrap gap-2 align-items-center mb-2">
            <span class="small text-muted" id="gpiv-summary-status" aria-live="polite"></span>
          </div>
          <div class="card shadow-sm gpiv-card" id="gpiv-summary-card">
            <div class="card-body p-2">
              <div id="gpiv-empty" class="text-muted small">@SR["NoXmlToDisplay"]</div>
              <div id="gpiv-xml-summary" class="d-flex flex-column gap-3" aria-live="polite"></div>
            </div>
          </div>
        </div>

        <!-- Removed top-level Raw/Pretty tabs. Inline viewers are provided next to each person name. -->

        <!-- Animated collapse Person Details panel -->
        <div id="pd-details-panel" class="collapse mt-3" aria-labelledby="pd-toggle-details">
          <div class="border-top pt-3">
            <div id="person-details-loading" class="d-none" aria-live="polite">
              @await Html.PartialAsync("_Spinner", null, new ViewDataDictionary(ViewData) { ["Text"] = gpivI18n.Loading, ["Size"] = "sm", ["Color"] = "text-secondary" })
            </div>
            <div id="person-details-error" class="alert alert-danger d-none" role="alert" aria-live="assertive"></div>
            <div id="person-details-body" data-initial-placeholder="@(string.IsNullOrEmpty(initialPublicId) ? "1" : "0")">
              @if (string.IsNullOrEmpty(initialPublicId))
              {
                <div class="alert alert-info mb-0" role="status">@SR["SelectPersonToViewDetails"]</div>
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Hidden compatibility trigger for existing loader logic -->
<button id="gpiv-tab-details-btn" type="button" class="d-none" data-bs-target="#pd-details-panel"></button>
<div id="gpiv-tab-details" class="d-none"></div>

<div id="gpiv-data" data-raw-b64="@rawB64" data-pretty-b64="@prettyB64" hidden></div>
<script nonce="@nonce" type="application/json" id="gpiv-i18n-json">@Html.Raw(JsonSerializer.Serialize(gpivI18n))</script>
<script nonce="@nonce" type="application/json" id="gpiv-raw-json">@Html.Raw(JsonSerializer.Serialize(raw))</script>
<script nonce="@nonce" type="application/json" id="gpiv-pretty-json">@Html.Raw(JsonSerializer.Serialize(pretty))</script>
<script nonce="@nonce" type="application/json" id="gpiv-includes-json">@Html.Raw(JsonSerializer.Serialize(includeGroups))</script>

<script type="module" src="~/js/gpiv-helpers.js" asp-append-version="true"></script>
<script type="module" src="~/js/gpiv-person-details-loader.js" asp-append-version="true"></script>
<script type="module" src="~/js/gpiv-viewer.js" asp-append-version="true"></script>
<script nonce="@nonce">(function(){
  const hiddenTrigger=document.getElementById('gpiv-tab-details-btn');
  let loaded=false;
  document.addEventListener('show.bs.collapse', e=>{
    if(e.target && e.target.id==='pd-details-panel' && !loaded){
      hiddenTrigger && hiddenTrigger.click();
      loaded=true;
    }
  });
  // Always move focus to the Person Details title when the panel is shown
  document.addEventListener('shown.bs.collapse', e=>{
    if(e.target && e.target.id==='pd-details-panel'){
      const title=document.getElementById('pd-title');
      if(title){ try{ title.setAttribute('tabindex','-1'); title.focus({preventScroll:false}); }catch{ try{ title.focus(); }catch{} } }
      // Hide any stale error banner when opening
      const err=document.getElementById('person-details-error');
      if(err){ try{ err.classList.add('d-none'); err.textContent=''; while(err.firstChild){ err.removeChild(err.firstChild);} }catch{} }
    }
  });
})();</script>

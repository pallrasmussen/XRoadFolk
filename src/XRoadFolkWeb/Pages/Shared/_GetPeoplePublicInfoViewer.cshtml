@using System.Text.Json
@using XRoadFolkWeb.Extensions
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer L
@inject XRoadFolkWeb.Infrastructure.ResponseViewerOptions RespOpts
@{
    var raw = (string?)(ViewData["RawXml"]) ?? "";
    var pretty = (string?)(ViewData["PrettyXml"]) ?? "";
    bool showRaw = RespOpts?.ShowRawXml ?? true;
    bool showPretty = RespOpts?.ShowPrettyXml ?? true;

    var gpivI18n = new {
        NoXmlToDisplay = L["NoXmlToDisplay"].Value,
        NoXmlRoot = L["NoXmlRoot"].Value,
        FailedToRenderTreePrefix = L["FailedToRenderTreePrefix"].Value,
        NoPeopleFound = L["NoPeopleFound"].Value,
        PeopleLabel = L["PeopleLabel"].Value,
        Basics = L["Basics"].Value,
        Names = L["Names"].Value,
        Name = L["Name"].Value,
        PublicId = L["PublicId"].Value,
        DOB = L["DOB"].Value,
        Status = L["Status"].Value,
        Expand = L["Expand"].Value,
        Collapse = L["Collapse"].Value,
        ExtendedSearch = L["ExtendedSearch"].Value,
        Fullscreen = L["Fullscreen"].Value,
        ToggleFullscreen = L["ToggleFullscreen"].Value,
        Summary = L["Summary"].Value,
        RawXml = L["RawXml"].Value,
        PrettyXml = L["PrettyXml"].Value,
        Copy = L["Copy"].Value,
        Copied = L["Copied"].Value,
        Download = L["Download"].Value,
        PersonDetails = L["PersonDetails"].Value,
        Loading = L["Loading"].Value
    };
    var nonce = Context?.Items?["CSP_NONCE"] as string;
}
<style nonce="@nonce">
    .gpiv-card { position: relative; }
    .gpiv-toolbar { position: sticky; top: -1px; z-index: 2; background: var(--bs-body-bg); padding-top: .25rem; }
    .gpiv-card.gpiv-fullscreen { position: fixed; inset: 0; z-index: 1050; margin: 0; border-radius: 0; background: var(--bs-body-bg); height: auto !important; }
    .gpiv-card .card-body { display: flex; flex-direction: column; min-height: 0; }
    .gpiv-card .gpiv-viewport { flex: 1 1 auto; min-height: 0; overflow: auto; }
    .gpiv-card.gpiv-fullscreen .card-body { height: 100dvh; }
    .gpiv-card.gpiv-fullscreen .gpiv-viewport { max-height: none; }
    .gpiv-drop { display: none; position: absolute; inset: 0; z-index: 3; background: rgba(0,0,0,.05); border: 2px dashed var(--bs-secondary); align-items: center; justify-content: center; text-align: center; padding: 2rem; border-radius: .375rem; }
    .gpiv-drop .msg { font-size: .95rem; color: var(--bs-secondary); }
    @@keyframes gpivFlash { 0% { background: rgba(255, 243, 205, .9); } 100% { background: transparent; } }
    .gpiv-highlight { animation: gpivFlash 1.5s ease-out 1; }

    /* SUMMARY: match person-details accordion exactly */
    #gpiv-xml-summary .accordion-button { padding: .5rem .75rem; font-weight: 600; }
    #gpiv-xml-summary .accordion-item + .accordion-item { border-top: 1px solid var(--bs-border-color); }
    #gpiv-xml-summary .accordion-body { padding: 0; }

    /* Table readability tweaks to match person-details */
    #gpiv-xml-summary .table { margin: 0; }
    #gpiv-xml-summary .table th {
        width: 35%;
        background: var(--bs-tertiary-bg, var(--bs-secondary-bg-subtle));
        color: var(--bs-secondary-color);
    }
    #gpiv-xml-summary .table th,
    #gpiv-xml-summary .table td {
        vertical-align: top;
        word-break: break-word;
    }
    #gpiv-xml-summary .table tbody tr:hover th,
    #gpiv-xml-summary .table tbody tr:hover td {
        background: var(--bs-secondary-bg-subtle);
    }

    /* Person header inside the scrolling summary viewport (non-sticky) */
    #gpiv-xml-summary .gpiv-person { position: static; }
    #gpiv-xml-summary .gpiv-person-header {
        position: static;
        background: transparent;
        border-bottom: none;
        padding-block: .25rem;
    }

    /* Tabs */
    .gpiv-tab-actions { gap: .5rem; }
    .gpiv-pre { white-space: pre; overflow: auto; font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; font-size: .85rem; padding: .75rem; border-radius: .25rem; background: var(--bs-tertiary-bg, #f8f9fa); }
    @@media (prefers-color-scheme: dark) {
      .gpiv-pre { background: rgba(255,255,255,.05); color: inherit; }
    }
</style>

<div class="card shadow-sm mb-4 gpiv-card">
    <div class="gpiv-drop" id="gpiv-drop">
        <div class="msg"><div class="mb-1">@L["DropXmlHint"]</div></div>
    </div>

    <div class="card-body">
        <div class="gpiv-toolbar d-flex flex-wrap gap-2 justify-content-between align-items-center mb-2 border-bottom pb-2">
          <h5 class="card-title mb-0">@L["GetPeoplePublicInfo"]</h5>
          <div class="d-flex flex-wrap gap-2 align-items-center"><!-- reserved for future --></div>
        </div>

        <ul class="nav nav-tabs small" id="gpiv-tabs" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="gpiv-tab-summary-btn" data-bs-toggle="tab" data-bs-target="#gpiv-tab-summary" type="button" role="tab" aria-controls="gpiv-tab-summary" aria-selected="true">@L["Summary"]</button>
          </li>
          @if (showRaw)
          {
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="gpiv-tab-raw-btn" data-bs-toggle="tab" data-bs-target="#gpiv-tab-raw" type="button" role="tab" aria-controls="gpiv-tab-raw" aria-selected="false">@L["RawXml"]</button>
          </li>
          }
          @if (showPretty)
          {
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="gpiv-tab-pretty-btn" data-bs-toggle="tab" data-bs-target="#gpiv-tab-pretty" type="button" role="tab" aria-controls="gpiv-tab-pretty" aria-selected="false">@L["PrettyXml"]</button>
          </li>
          }
          <li class="nav-item ms-auto" role="presentation">
            <button class="nav-link" id="gpiv-tab-details-btn" data-bs-toggle="tab" data-bs-target="#gpiv-tab-details" type="button" role="tab" aria-controls="gpiv-tab-details" aria-selected="false">@L["PersonDetails"]</button>
          </li>
        </ul>

        <div class="tab-content border-start border-end border-bottom rounded-bottom p-2 small" id="gpiv-tabs-content" style="min-height:12rem;">
          <div class="tab-pane fade show active" id="gpiv-tab-summary" role="tabpanel" aria-labelledby="gpiv-tab-summary-btn" tabindex="0">
            <div id="gpiv-empty" class="text-muted small mb-2" style="display:none;">@L["EmptyState"]</div>
            <div id="gpiv-xml-summary" class="gpiv-viewport mb-0 p-3 rounded"></div>
          </div>

          @if (showRaw)
          {
          <div class="tab-pane fade" id="gpiv-tab-raw" role="tabpanel" aria-labelledby="gpiv-tab-raw-btn" tabindex="0">
            <div class="d-flex justify-content-end gpiv-tab-actions mb-2">
              <button type="button" class="btn btn-sm btn-outline-secondary" id="gpiv-copy-raw">@L["Copy"]</button>
              <button type="button" class="btn btn-sm btn-outline-secondary" id="gpiv-dl-raw">@L["Download"]</button>
            </div>
            <pre class="gpiv-pre" id="gpiv-raw-pre"></pre>
          </div>
          }

          @if (showPretty)
          {
          <div class="tab-pane fade" id="gpiv-tab-pretty" role="tabpanel" aria-labelledby="gpiv-tab-pretty-btn" tabindex="0">
            <div class="d-flex justify-content-end gpiv-tab-actions mb-2">
              <button type="button" class="btn btn-sm btn-outline-secondary" id="gpiv-copy-pretty">@L["Copy"]</button>
              <button type="button" class="btn btn-sm btn-outline-secondary" id="gpiv-dl-pretty">@L["Download"]</button>
            </div>
            <pre class="gpiv-pre" id="gpiv-pretty-pre"></pre>
          </div>
          }

          <div class="tab-pane fade" id="gpiv-tab-details" role="tabpanel" aria-labelledby="gpiv-tab-details-btn" tabindex="0">
            <div id="person-details-section" class="card shadow-sm mb-0 person-details d-none" role="region" aria-labelledby="pd-title">
              <div class="card-body">
                <div class="pd-toolbar d-flex flex-wrap gap-2 justify-content-between align-items-center mb-2 border-bottom pb-2">
                  <h5 id="pd-title" class="card-title mb-0">@L["PersonDetails"]</h5>
                  <div class="d-flex flex-wrap gap-2">
                    <button type="button" id="pd-expand-all" class="btn btn-sm btn-outline-secondary"><i class="bi bi-chevron-double-down me-1" aria-hidden="true"></i>@L["Expand"]</button>
                    <button type="button" id="pd-collapse-all" class="btn btn-sm btn-outline-secondary"><i class="bi bi-chevron-double-up me-1" aria-hidden="true"></i>@L["Collapse"]</button>
                    <button type="button" id="pd-fullscreen" class="btn btn-sm btn-outline-secondary" title="@L["ToggleFullscreen"]"><i class="bi bi-arrows-fullscreen me-1" aria-hidden="true"></i>@L["Fullscreen"]</button>
                  </div>
                </div>

                <ul class="nav nav-tabs small" id="pd-tabs" role="tablist">
                  <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="pd-tab-details-btn" data-bs-toggle="tab" data-bs-target="#pd-tab-details" type="button" role="tab" aria-controls="pd-tab-details" aria-selected="true">@L["PersonDetails"]</button>
                  </li>
                  <li class="nav-item" role="presentation">
                    <button class="nav-link" id="pd-tab-raw-btn" data-bs-toggle="tab" data-bs-target="#pd-tab-raw" type="button" role="tab" aria-controls="pd-tab-raw" aria-selected="false">@L["RawXml"]</button>
                  </li>
                  <li class="nav-item" role="presentation">
                    <button class="nav-link" id="pd-tab-pretty-btn" data-bs-toggle="tab" data-bs-target="#pd-tab-pretty" type="button" role="tab" aria-controls="pd-tab-pretty" aria-selected="false">@L["PrettyXml"]</button>
                  </li>
                </ul>

                <div class="tab-content border-start border-end border-bottom rounded-bottom p-2" id="pd-tabs-content" style="min-height:10rem;">
                  <div class="tab-pane fade show active" id="pd-tab-details" role="tabpanel" aria-labelledby="pd-tab-details-btn" tabindex="0">
                    <div id="person-details-loading" class="d-none" aria-live="polite">
                      @await Html.PartialAsync("_Spinner", null, new ViewDataDictionary(ViewData) { ["Text"] = gpivI18n.Loading, ["Size"] = "sm", ["Color"] = "text-secondary" })
                    </div>
                    <div id="person-details-error" class="alert alert-danger d-none" role="alert" aria-live="assertive"></div>
                    <div id="person-details-body"><!-- accordion injected here --></div>
                  </div>

                  <div class="tab-pane fade" id="pd-tab-raw" role="tabpanel" aria-labelledby="pd-tab-raw-btn" tabindex="0">
                    <div class="d-flex justify-content-end gpiv-tab-actions mb-2">
                      <button type="button" class="btn btn-sm btn-outline-secondary" id="pd-copy-raw">@L["Copy"]</button>
                      <button type="button" class="btn btn-sm btn-outline-secondary" id="pd-dl-raw">@L["Download"]</button>
                    </div>
                    <pre class="gpiv-pre" id="pd-raw-pre"></pre>
                  </div>

                  <div class="tab-pane fade" id="pd-tab-pretty" role="tabpanel" aria-labelledby="pd-tab-pretty-btn" tabindex="0">
                    <div class="d-flex justify-content-end gpiv-tab-actions mb-2">
                      <button type="button" class="btn btn-sm btn-outline-secondary" id="pd-copy-pretty">@L["Copy"]</button>
                      <button type="button" class="btn btn-sm btn-outline-secondary" id="pd-dl-pretty">@L["Download"]</button>
                    </div>
                    <pre class="gpiv-pre" id="pd-pretty-pre"></pre>
                  </div>
                </div>

              </div>
            </div>
          </div>
        </div>
    </div>
</div>

<script nonce="@nonce" type="application/json" id="gpiv-i18n-json">@Html.Raw(JsonSerializer.Serialize(gpivI18n))</script>
<script nonce="@nonce" type="application/json" id="gpiv-raw-json">@Html.Raw(JsonSerializer.Serialize(raw))</script>
<script nonce="@nonce" type="application/json" id="gpiv-pretty-json">@Html.Raw(JsonSerializer.Serialize(pretty))</script>

<!-- Externalized viewer script (cacheable). Uses console.error for surfaced errors. -->
<script src="~/js/gpiv-viewer.js" asp-append-version="true" defer></script>
<!-- Externalized person details loader to avoid inline scripts -->
<script src="~/js/gpiv-person-details-loader.js" asp-append-version="true" defer></script>

<script nonce="@nonce">
(function(){
  function byId(id){ return document.getElementById(id); }
  function text(id){ var el=byId(id); return el? (el.textContent||'') : ''; }
  function download(name, content){ try{ var blob=new Blob([content||''], { type: 'text/xml;charset=utf-8' }); var a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download=name; document.body.appendChild(a); a.click(); URL.revokeObjectURL(a.href); a.remove(); }catch(e){ console.error('gpiv: download failed', e);} }

  document.addEventListener('DOMContentLoaded', function(){
    try{
      var raw = JSON.parse(text('gpiv-raw-json')) || '';
      var pretty = JSON.parse(text('gpiv-pretty-json')) || '';
      var i18n = {};
      try{ i18n = JSON.parse(text('gpiv-i18n-json')) || {}; }catch{}

      var rawPre = byId('gpiv-raw-pre'); if(rawPre) rawPre.textContent = raw || i18n.NoXmlToDisplay || '';
      var prettyPre = byId('gpiv-pretty-pre'); if(prettyPre) prettyPre.textContent = pretty || raw || i18n.NoXmlToDisplay || '';

      var copyRaw = byId('gpiv-copy-raw'); if (copyRaw) copyRaw.addEventListener('click', function(){ try{ navigator.clipboard.writeText(raw || ''); copyRaw.textContent = (i18n.Copied||'Copied'); setTimeout(function(){ copyRaw.textContent = (i18n.Copy||'Copy'); }, 1200);}catch{}});
      var copyPretty = byId('gpiv-copy-pretty'); if (copyPretty) copyPretty.addEventListener('click', function(){ try{ navigator.clipboard.writeText(pretty || raw || ''); copyPretty.textContent = (i18n.Copied||'Copied'); setTimeout(function(){ copyPretty.textContent = (i18n.Copy||'Copy'); }, 1200);}catch{}});

      var dlRaw = byId('gpiv-dl-raw'); if (dlRaw) dlRaw.addEventListener('click', function(){ var name='GetPeoplePublicInfo_raw_'+new Date().toISOString().replace(/[:.]/g,'-')+'.xml'; download(name, raw || ''); });
      var dlPretty = byId('gpiv-dl-pretty'); if (dlPretty) dlPretty.addEventListener('click', function(){ var name='GetPeoplePublicInfo_pretty_'+new Date().toISOString().replace(/[:.]/g,'-')+'.xml'; download(name, pretty || raw || ''); });
    }catch(e){ console.error('gpiv: tabs init failed', e); }
  });
})();
</script>